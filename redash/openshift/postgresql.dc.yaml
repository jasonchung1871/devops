---
kind: Template
apiVersion: template.openshift.io/v1
labels:
  app: ${NAME}
  app.kubernetes.io/component: ${NAME}
  app.kubernetes.io/instance: ${NAME}
  app.kubernetes.io/managed-by: template
  app.kubernetes.io/name: redash
  app.kubernetes.io/part-of: ${NAME}
  template: ${NAME}-postgres-dc-template
metadata:
  name: ${NAME}
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: "${NAME}-postgresql"
      labels:
        app: "${NAME}"
      annotations: {}
    spec:
      ports:
      - name: 5432-tcp
        port: 5432
        protocol: TCP
        targetPort: 5432
      selector:
        name: "${NAME}"
        deploymentconfig: "${NAME}-postgresql"
      type: ClusterIP
      sessionAffinity: None
    status:
      loadBalancer: {}
  - kind: DeploymentConfig
    apiVersion: v1
    metadata:
      name: "${NAME}-postgresql"
      labels:
        app: "${NAME}"
      annotations: {}
    spec:
      strategy:
        type: Recreate
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${NAME}-postgresql"
            from:
              kind: ImageStreamTag
              namespace: openshift
              name: postgresql:9.6
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        name: "${NAME}"
        deploymentconfig: "${NAME}-postgresql"
      template:
        metadata:
          creationTimestamp:
          labels:
            name: "${NAME}"
            deploymentconfig: "${NAME}-postgresql"
          annotations: {}
        spec:
          containers:
          - env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: "${NAME}-postgresql"
                  key: POSTGRES_USER
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "${NAME}-postgresql"
                  key: POSTGRES_PASSWORD
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: "${NAME}-postgresql"
                  key: POSTGRES_DATABASE
            name: "${NAME}-postgresql"
            image: "${IMAGE_REGISTRY}/openshift/postgresql:9"
            ports:
            - containerPort: 5432
              protocol: TCP
            livenessProbe:
              tcpSocket:
                port: 5432
              initialDelaySeconds: 30
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              exec:
                command:
                  - /bin/bash
                  - '-c'
                  - pg_isready -h localhost -p 5432
              failureThreshold: 3
              initialDelaySeconds: 20
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 15
            resources:
              limits:
                memory: ${POSTGRESQL_MEMORY_LIMIT}
            terminationMessagePath: "/dev/termination-log"
            terminationMessagePolicy: File
            imagePullPolicy: Always
            volumeMounts:
            - name: "${NAME}-postgresql-volume"
              mountPath: /var/lib/pgsql/data
          volumes:
          - name: "${NAME}-postgresql-volume"
            persistentVolumeClaim:
              claimName: "${NAME}-postgresql"
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: "${NAME}-postgresql"
      labels:
        app: "${NAME}"
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: "${POSTGRESQL_VOLUME_CAPACITY}"
      storageClassName: netapp-file-standard
parameters:
  - name: NAME
    displayName: Name
    description: The name assigned to all of the objects defined in this template.
    required: true
    value: redash
  - name: NAMESPACE
    description: Target namespace reference (i.e. '9f0fbe-dev')
    displayName: Namespace
    required: true
  - name: POSTGRESQL_MEMORY_LIMIT
    displayName: Postgresql Memory Limit
    description: The memory limit for PostgreSQL
    required: true
    value: 512Mi
  - name: POSTGRESQL_VOLUME_CAPACITY
    displayName: Postgresql Volume Capacity
    description: The volume capacity for PostgreSQL
    required: true
    value: 4Gi
  - name: IMAGE_REGISTRY
    description: The base docker registry
    displayName: Docker Image Registry
    required: true
    value: image-registry.openshift-image-registry.svc:5000